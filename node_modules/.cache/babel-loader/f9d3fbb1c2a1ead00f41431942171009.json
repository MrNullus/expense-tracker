{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\projetos\\\\d5react\\\\expense-tracker\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMoth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/TableArea';\nimport { InfoArea } from './components/InfoArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMoth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n  useEffect(() => {\n    let incomeCount = 0;\n    let expenseCount = 0;\n\n    for (let i in filteredList) {\n      if (categories[filteredList[i].category].expense) {\n        expenseCount += filteredList[i].value;\n      } else {\n        incomeCount += filteredList[i].value;\n      }\n    }\n\n    setIncome(incomeCount);\n    setExpense(expenseCount);\n  }, [filteredList]);\n\n  const handleMonthChange = newMonth => {\n    setCurrentMonth(newMonth);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Header, {\n      children: /*#__PURE__*/_jsxDEV(C.HeaderText, {\n        children: \"Sistema Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InfoArea, {\n        currentMonth: currentMonth,\n        onMonthChange: handleMonthChange,\n        income: income,\n        expense: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableArea, {\n        list: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"J/YP/CtXjB6GWQOovoH3/bNzer4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","C","categories","items","getCurrentMoth","filterListByMonth","TableArea","InfoArea","App","list","setList","filteredList","setFilteredList","currentMonth","setCurrentMonth","income","setIncome","expense","setExpense","incomeCount","expenseCount","i","category","value","handleMonthChange","newMonth"],"sources":["C:/www/projetos/d5react/expense-tracker/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/Item';\nimport { Category } from './types/Category';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMoth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/TableArea';\nimport { InfoArea } from './components/InfoArea';\n\n\nfunction App() {\n  const [list, setList] = useState(items);\n  const [filteredList,setFilteredList] = useState<Item[]>([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMoth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n   \n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n\n  useEffect(() => {\n    let incomeCount = 0;\n    let expenseCount = 0;\n\n    for (let i in filteredList) {\n      if (categories[filteredList[i].category].expense) {\n        expenseCount += filteredList[i].value;\n      } else {\n        incomeCount += filteredList[i].value;\n      }\n    }\n\n    setIncome(incomeCount);\n    setExpense(expenseCount)\n\n  }, [filteredList]);\n\n  const handleMonthChange = (newMonth: string) => {\n    setCurrentMonth(newMonth);\n  }\n\n  return (\n    <C.Container>\n      <C.Header>\n        <C.HeaderText>Sistema Financeiro</C.HeaderText>\n      </C.Header>\n\n      <C.Body>\n      \n        <InfoArea \n          currentMonth={currentMonth} \n          onMonthChange={handleMonthChange}\n          income={income}\n          expense={expense}\n        /> \n\n        {/* Area de Inserção */}\n\n        <TableArea list={filteredList} />\n        \n      </C.Body>\n    </C.Container>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AAGA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,sBAAlD;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACI,KAAD,CAAhC;EACA,MAAM,CAACQ,YAAD,EAAcC,eAAd,IAAiCb,QAAQ,CAAS,EAAT,CAA/C;EACA,MAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAACK,cAAc,EAAf,CAAhD;EACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACdY,eAAe,CAACP,iBAAiB,CAACI,IAAD,EAAOI,YAAP,CAAlB,CAAf;EACD,CAFQ,EAEN,CAACJ,IAAD,EAAOI,YAAP,CAFM,CAAT;EAIAb,SAAS,CAAC,MAAM;IACd,IAAImB,WAAW,GAAG,CAAlB;IACA,IAAIC,YAAY,GAAG,CAAnB;;IAEA,KAAK,IAAIC,CAAT,IAAcV,YAAd,EAA4B;MAC1B,IAAIT,UAAU,CAACS,YAAY,CAACU,CAAD,CAAZ,CAAgBC,QAAjB,CAAV,CAAqCL,OAAzC,EAAkD;QAChDG,YAAY,IAAIT,YAAY,CAACU,CAAD,CAAZ,CAAgBE,KAAhC;MACD,CAFD,MAEO;QACLJ,WAAW,IAAIR,YAAY,CAACU,CAAD,CAAZ,CAAgBE,KAA/B;MACD;IACF;;IAEDP,SAAS,CAACG,WAAD,CAAT;IACAD,UAAU,CAACE,YAAD,CAAV;EAED,CAfQ,EAeN,CAACT,YAAD,CAfM,CAAT;;EAiBA,MAAMa,iBAAiB,GAAIC,QAAD,IAAsB;IAC9CX,eAAe,CAACW,QAAD,CAAf;EACD,CAFD;;EAIA,oBACE,QAAC,CAAD,CAAG,SAAH;IAAA,wBACE,QAAC,CAAD,CAAG,MAAH;MAAA,uBACE,QAAC,CAAD,CAAG,UAAH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,CAAD,CAAG,IAAH;MAAA,wBAEE,QAAC,QAAD;QACE,YAAY,EAAEZ,YADhB;QAEE,aAAa,EAAEW,iBAFjB;QAGE,MAAM,EAAET,MAHV;QAIE,OAAO,EAAEE;MAJX;QAAA;QAAA;QAAA;MAAA,QAFF,eAWE,QAAC,SAAD;QAAW,IAAI,EAAEN;MAAjB;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GAtDQH,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}