{"ast":null,"code":"export const getCurrentMoth = () => {\n  let now = new Date();\n  return `${now.getFullYear()}-${now.getMonth() + 1}`;\n};\nexport const filterListByMonth = (list, date) => {\n  let newList = [];\n  let [year, month] = date.split('-');\n\n  for (let i in list) {\n    if (list[i].date.getFullYear() === parseInt(year) && list[i].date.getMonth() + 1 === parseInt(month)) {\n      newList.push(list[i]);\n    }\n  }\n\n  return newList;\n};\nexport const formatDate = date => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  return `${addZeroToDate(day)}/${addZeroToDate(month)}/${year}`;\n};\n\nconst addZeroToDate = n => n < 10 ? `0${n}` : `${n}`;\n\nexport const formatCurrentMonth = currentMonth => {\n  let [year, month] = currentMonth.split('-');\n  let months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n  return `${months[parseInt(month) - 1]} de  ${year}`;\n};","map":{"version":3,"names":["getCurrentMoth","now","Date","getFullYear","getMonth","filterListByMonth","list","date","newList","year","month","split","i","parseInt","push","formatDate","day","getDate","addZeroToDate","n","formatCurrentMonth","currentMonth","months"],"sources":["C:/www/projetos/d5react/expense-tracker/src/helpers/dateFilter.ts"],"sourcesContent":["import { Item } from '../types/Item';\r\n\r\nexport const getCurrentMoth = () => {\r\n    let now = new Date();\r\n\r\n    return `${now.getFullYear()}-${now.getMonth()+1}`;\r\n}\r\n\r\nexport const filterListByMonth = (list: Item[], date: string): Item[] => {\r\n    let newList: Item[] = [];\r\n    let [year, month] = date.split('-');\r\n\r\n    for(let i in list) {\r\n        if (\r\n            list[i].date.getFullYear() === parseInt(year) &&\r\n            (list[i].date.getMonth() + 1) === parseInt(month)\r\n        ) {\r\n            newList.push(list[i]);\r\n        }\r\n    }\r\n\r\n    return newList;\r\n}\r\n\r\nexport const formatDate = (date: Date): string => {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    return `${addZeroToDate(day)}/${addZeroToDate(month)}/${year}`;\r\n}\r\n\r\nconst addZeroToDate = (n: number): string => n < 10 ? `0${n}` : `${n}`;\r\n\r\nexport const formatCurrentMonth = (currentMonth: string): string => {\r\n    let [year, month] = currentMonth.split('-');\r\n    let months = [\r\n        'Janeiro', 'Fevereiro', 'Março', 'Abril', \r\n        'Maio', 'Junho', 'Julho', 'Agosto', \r\n        'Setembro', 'Outubro', 'Novembro', 'Dezembro',\r\n    ];\r\n\r\n    return `${months[parseInt(month) - 1]} de  ${year}`;\r\n}"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAG,MAAM;EAChC,IAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;EAEA,OAAQ,GAAED,GAAG,CAACE,WAAJ,EAAkB,IAAGF,GAAG,CAACG,QAAJ,KAAe,CAAE,EAAhD;AACH,CAJM;AAMP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAwC;EACrE,IAAIC,OAAe,GAAG,EAAtB;EACA,IAAI,CAACC,IAAD,EAAOC,KAAP,IAAgBH,IAAI,CAACI,KAAL,CAAW,GAAX,CAApB;;EAEA,KAAI,IAAIC,CAAR,IAAaN,IAAb,EAAmB;IACf,IACIA,IAAI,CAACM,CAAD,CAAJ,CAAQL,IAAR,CAAaJ,WAAb,OAA+BU,QAAQ,CAACJ,IAAD,CAAvC,IACCH,IAAI,CAACM,CAAD,CAAJ,CAAQL,IAAR,CAAaH,QAAb,KAA0B,CAA3B,KAAkCS,QAAQ,CAACH,KAAD,CAF9C,EAGE;MACEF,OAAO,CAACM,IAAR,CAAaR,IAAI,CAACM,CAAD,CAAjB;IACH;EACJ;;EAED,OAAOJ,OAAP;AACH,CAdM;AAgBP,OAAO,MAAMO,UAAU,GAAIR,IAAD,IAAwB;EAC9C,IAAIE,IAAI,GAAGF,IAAI,CAACJ,WAAL,EAAX;EACA,IAAIO,KAAK,GAAGH,IAAI,CAACH,QAAL,KAAkB,CAA9B;EACA,IAAIY,GAAG,GAAGT,IAAI,CAACU,OAAL,EAAV;EAEA,OAAQ,GAAEC,aAAa,CAACF,GAAD,CAAM,IAAGE,aAAa,CAACR,KAAD,CAAQ,IAAGD,IAAK,EAA7D;AACH,CANM;;AAQP,MAAMS,aAAa,GAAIC,CAAD,IAAuBA,CAAC,GAAG,EAAJ,GAAU,IAAGA,CAAE,EAAf,GAAoB,GAAEA,CAAE,EAArE;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,YAAD,IAAkC;EAChE,IAAI,CAACZ,IAAD,EAAOC,KAAP,IAAgBW,YAAY,CAACV,KAAb,CAAmB,GAAnB,CAApB;EACA,IAAIW,MAAM,GAAG,CACT,SADS,EACE,WADF,EACe,OADf,EACwB,OADxB,EAET,MAFS,EAED,OAFC,EAEQ,OAFR,EAEiB,QAFjB,EAGT,UAHS,EAGG,SAHH,EAGc,UAHd,EAG0B,UAH1B,CAAb;EAMA,OAAQ,GAAEA,MAAM,CAACT,QAAQ,CAACH,KAAD,CAAR,GAAkB,CAAnB,CAAsB,QAAOD,IAAK,EAAlD;AACH,CATM"},"metadata":{},"sourceType":"module"}